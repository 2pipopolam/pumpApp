version: '3.8'

services:
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME:-pampdb}
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-123456}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-pampdb}"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"

  web:
    build: .
    volumes:
      - .:/app
      - static_volume:/app/static
      - media_volume:/app/media
      - frontend_build:/app/frontend/build
    ports:
      - "8000:8000"
      - "3000:3000"
    environment:
      - DEBUG=${DEBUG:-1}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-123}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS:-localhost 127.0.0.1 [::1]}
      - DB_NAME=${DB_NAME:-pampdb}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-123456}
      - DB_HOST=${DB_HOST:-db}
      - DB_PORT=${DB_PORT:-5432}
      - GOOGLE_OAUTH2_KEY=${GOOGLE_OAUTH2_KEY}
      - GOOGLE_OAUTH2_SECRET=${GOOGLE_OAUTH2_SECRET}
      - REACT_APP_API_URL=http://localhost:8000/api
      - NODE_ENV=development
      - STATIC_ROOT=/app/static
      - MEDIA_ROOT=/app/media
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/app/static
      - media_volume:/app/media
      - frontend_build:/app/frontend/build
    depends_on:
      - web
    restart: unless-stopped

volumes:
  postgres_data:
  static_volume:
  media_volume:
  frontend_build:
